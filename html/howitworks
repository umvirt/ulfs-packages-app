<h2>How it works?</h2>
<h3>Service Environment</h3>
<p>Environment is simple:
<ul>
<li>Arch: X86-64
<li>OS: GNU/Linux
<li>Web-server: Apache HTTPd + mod_rewrite
<li>CGI: PHP7 + mysqli
<li>Database-server: MariaDB (MySQL)
</ul>
</p>
<h3>Service Web-application</h3>
Application contain three parts:
<ul>
<li>Database
<li>Site
<li>File storage
</ul>

<h4>Database</h4>
<p>Database is storage for all packages information: 
<ol>
<li>source package file (typicaly "%package_name%.tar.gz"), 
<li>source package directory (directory with source package files, can be not trivial to define), 
<li>patches (source code fixes which not included in package), 
<li>addons (extra downloads, additional files), 
<li>dependances (packages which chould be installed before), 
<li>configure command(s) (typicaly "./configure --prefix=/usr"), 
<li>build command(s) (typicaly "make"),
<li>install commands(s) (typicaly "make install")
</ol>
</p>
<p>In order to work with different versions of packages they splited on releases. Release is set of packages with specific versions. Version 0.1 contain packages of LFS v. 8.3.</p>
<h4>File storage</h4>
<p>All source packages are stored localy with splitting by releases.</p>
<p>All packages files within release  directory are also splited by folders:
<ul>
<li>Xorg source packages
<ul>
<li>Xlibs
<li>Xapps
<li>Xfonts
</ul>
<li>Python modules
<li>Perl modules
<li>First lowcased character (digit/letter) of package folders (0,1,2...a,b,c,...z)
</ul>
</p>
<h4>Site</h4>
<p>Site is brain of application it get data from other aplication parts and produce HTML-pages, JSON-files, XML-files, and produce install scripts for packages.</p>

<h2>Client</h2>
<h3>Environment</h3>
<p>Client environment is Linux From Scratch with next assumptions:
<ul>
<li>Environment variable $XORG_PREFIX contain path to Xorg files. Defined according BLFS book.
<li>It is allowed to write empty files with installed packages names in directory "/var/cache/ulfs-package".
<li>Folder /sources exists. All operations with source packages is performed within this directory.
</ul>
</p>
<h3>Directory Structure</h3>
<pre>
/sources
	.cleanup

/var
	cache/
		ulfs-packages/
			%packagename%
	log/
		ulfs-packages/
			%packagename%/
				start.time
				download.time
				[cleanup.time]
				unpack.time
				configure.time
				build.time
				install.time
				finish.time

				files.txt
</pre>

<h4>/sources/</h4>

<p>This directory is used to store source packages archives and directories.</p>
<p>.cleanup - empty file which force directory remove before unpacking source package. </p>

<h4>/var/cache/ulfs-packages/</h4>

<p>This directory is used as database of installed packages. </p>
<p>%packagename% - Each empty file represent package with same name.</p>

<p>Installation script check file existance to make decission to install dependances or not.
If file was deleted installation script perform it reinstallation.</p>

<h4>/var/log/ulfs-packages/</h4>
<p>This directory used to store information about source packages installation proccess.</p>
<p>%packagename%/ - Each folder represent package with same name.</p>

<p>Timestamp files used for search installed files and can be used for profiling:
<ul>
<li>start.time - timestamp recieved before start. 
<li>download.time - timestamp recieved before download.
<li>[cleanup.time]	-	timestamp recieved before directory cleanup. Optional.
<li>unpack.time	- timestamp recieved before unpacking and patching
<li>configure.time - timestamp recieved before configuration
<li>build.time - timestamp recieved before build
<li>install.time - timestamp recieved before installation
<li>finish.time - timestamp recieved before finish
</ul>
</p>

<p>files.txt - list of installed files</p>


<h3>Autonomous installation Directory Structure</h3>
<pre>
/mnt/umvirt/
	files/
		packages/
	packages/
		%packagename%.sh
</pre>

<p>/mnt/umvirt/ - directory or symlink to directory which contain local installation data</p>

<p>files/ - directory which contain umvirt lfs files</p>
<p>files/packages/ - directory which contain source package repository</p>

<p>packages/ - directory which contain installation scripts.</p>
<p>packages/%packagename%.sh - each file represent package with same name.</p>

